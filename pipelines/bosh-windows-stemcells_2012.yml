groups:
- name: all
  jobs:
  - bump-stemcell-builder-submodules
  - test-stemcell-builder
  - build-stemcells
  - promote-azure
  - promote-aws-gcp-vsphere
  - ship-bosh-stemcell-builder
  - create-vsphere-add-updates
  - create-vsphere-stemcell-from-vmx
  - create-vsphere-stemcell-from-diff
  - test-vsphere-stemcell-from-vmx
  - test-vsphere-stemcell-from-diff
  - build-aws-regional-amis
  - create-aws-stemcell
  - create-gcp-stemcell
  - create-azure-stemcell
  - print-azure-publishing-instructions
  - test-azure-stemcell
  - promote-boshio
- name: main
  jobs:
  - bump-stemcell-builder-submodules
  - test-stemcell-builder
  - build-stemcells
  - promote-azure
  - promote-aws-gcp-vsphere
  - promote-boshio
  - ship-bosh-stemcell-builder
- name: vsphere
  jobs:
  - create-vsphere-add-updates
  - create-vsphere-stemcell-from-vmx
  - create-vsphere-stemcell-from-diff
  - test-vsphere-stemcell-from-vmx
  - test-vsphere-stemcell-from-diff
- name: aws
  jobs:
  - build-aws-regional-amis
  - create-aws-stemcell
- name: gcp
  jobs:
  - create-gcp-stemcell
- name: azure
  jobs:
  - create-azure-stemcell
  - print-azure-publishing-instructions
  - test-azure-stemcell

resources:
# repos
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/greenhouse-ci.git
- name: bosh-agent
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-agent.git
- name: bwats
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/bosh-windows-acceptance-tests.git
- name: stemcell-builder-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry-incubator/bosh-windows-stemcell-builder.git
    private_key: ((CLOUDFOUNDRYINCUBATOR_BOSH_WINDOWS_STEMCELL_BUILDER_DEPLOY_KEY))
- name: stemcell-builder
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/bosh-windows-stemcell-builder.git
    private_key: ((CLOUDFOUNDRYINCUBATOR_BOSH_WINDOWS_STEMCELL_BUILDER_DEPLOY_KEY))
- name: windows-stemcell-dependencies
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/windows-stemcell-dependencies.git
    private_key: ((PIVOTAL-CF_WINDOWS-STEMCELL-DEPENDENCIES_PRIVATE_KEY))
- name: stemcell-builder-release
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: bosh-windows-stemcell-builder
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))
- name: openssh-release
  type: github-release
  source:
    user: PowerShell
    repository: Win32-OpenSSH
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))
- name: stembuild
  type: github-release
  source:
    owner: pivotal-cf-experimental
    repository: stembuild
    pre_release: true
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

# versions
- name: updated-vmx-version
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/updated-vmx-version
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: "1.0.0"
- name: stemcells-main-version
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/stemcells-main-version-edge
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1200.0.0
- name: vsphere-stemcell-version
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/vsphere-stemcell-version-edge
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1200.0.0
- name: aws-stemcell-version
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/aws-stemcell-version-edge
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1200.0.0
- name: gcp-stemcell-version
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/gcp-stemcell-version-edge
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1200.0.0
- name: azure-stemcell-version
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/azure-stemcell-version-edge
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1200.0.0

# locks
- name: aws-lock
  type: pool
  source:
    branch: master
    pool: stemcells-aws
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: azure-lock
  type: pool
  source:
    branch: master
    pool: stemcells-azure
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: gcp-lock
  type: pool
  source:
    branch: master
    pool: stemcells-gcp
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: vsphere-worker-lock
  type: pool
  source:
    branch: master
    pool: vsphere-worker-lock
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: vsphere-director-lock
  type: pool
  source:
    branch: master
    pool: vsphere-director-lock
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks

# s3 buckets
- name: major-stemcell
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: stemcell-(.*).json
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-pre-release-candidate
  type: s3
  source:
    bucket: bosh-windows-stemcells-pre-release-candidate
    regexp: bosh-stemcell-(.*)-diff-vsphere-esxi-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-pre-release-candidate-from-vmx
  type: s3
  source:
    bucket: stemcells-pre-release-candidate-from-vmx
    regexp: bosh-stemcell-(.*)-vsphere-esxi-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-release-candidate
  type: s3
  source:
    bucket: bosh-windows-stemcells-private-release-candidates
    regexp: bosh-stemcell-(.*)-vsphere-esxi-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-release-candidate-diff
  type: s3
  source:
    bucket: bosh-windows-stemcells-private-release-candidates-diff
    regexp: bosh-stemcell-(.*)-vsphere-esxi-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-final
  type: s3
  source:
   bucket: bosh-windows-stemcells-private
   regexp: bosh-stemcell-(.*)-vsphere-esxi-windows2012R2-go_agent.tgz
   access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
   secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: aws-stemcell-release-candidate
  type: s3
  source:
    bucket: bosh-windows-stemcells-release-candidates
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: aws-stemcell-final
  type: s3
  source:
    bucket: bosh-windows-stemcells-production
    region_name: us-east-2
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: base-amis-win2012r2
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: base-amis-windows2012R2-(.*).json
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: base-gcp-image-win2012r2
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: base-gcp-image-windows2012R2-(.*).json
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: gcp-2012R2-stemcell-release-candidate
  type: s3
  source:
    bucket: bosh-windows-stemcells-release-candidates
    regexp: light-bosh-stemcell-(.*)-google-kvm-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: gcp-stemcell-final
  type: s3
  source:
    bucket: bosh-windows-stemcells-production
    region_name: us-east-2
    regexp: light-bosh-stemcell-(.*)-google-kvm-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-stemcell-pre-release-candidate
  type: s3
  source:
    bucket: bosh-windows-stemcells-pre-release-candidate
    regexp: light-bosh-stemcell-(.*)-azure-hyperv-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-base-vhd-uri
  type: s3
  source:
    bucket: bosh-windows-stemcells-pre-release-candidate
    regexp: bosh-stemcell-(.*)-azure-vhd-uri.txt
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-stemcell-release-candidate
  type: s3
  source:
    bucket: bosh-windows-stemcells-release-candidates
    regexp: light-bosh-stemcell-(.*)-azure-hyperv-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: azure-stemcell-final
  type: s3
  source:
    bucket: bosh-windows-stemcells-production
    region_name: us-east-2
    regexp: light-bosh-stemcell-(.*)-azure-hyperv-windows2012R2-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

jobs:
- name: bump-stemcell-builder-submodules
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder-develop
    - get: bosh-agent
      trigger: true
    - get: bwats
      trigger: true
  - task: bump-submodules
    input_mapping:
      source-repo: stemcell-builder-develop
    output_mapping:
      bumped-repo: stemcell-builder-bumped
    file: ci/bump-submodules/task.yml
  - put: stemcell-builder-develop
    params:
      repository: stemcell-builder-bumped
      rebase: true

- name: test-stemcell-builder
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder-develop
      trigger: true
    - get: stemcell-builder-master
      resource: stemcell-builder
  - aggregate:
    - task: test-stemcell-builder
      file: ci/bosh-windows-stemcell-builder/rspec/task.yml
      input_mapping: {stemcell-builder: stemcell-builder-develop}
    - task: test-bosh-psmodules
      file: ci/bosh-windows-stemcell-builder/bosh-psmodules/task.yml
      input_mapping: {stemcell-builder: stemcell-builder-develop}
  - task: merge-to-master
    input_mapping: { from-repo: stemcell-builder-develop, to-repo: stemcell-builder-master }
    file: ci/merge-repo/task.yml
    params:
      FROM_BRANCH: develop
  - put: stemcell-builder
    params: { repository: merged-repo/to-repo }

- name: create-vsphere-add-updates
  serial: true
  plan:
  - put: vsphere-worker-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: stemcell-builder
      - get: windows-stemcell-dependencies
      - get: vmx-version
        resource: updated-vmx-version
    - task: add-updates
      privileged: true
      input_mapping: { version: vmx-version }
      file: ci/bosh-windows-stemcell-builder/create-vmx-add-updates/task.yml
      tags: [vsphere-windows-worker]
      params:
        OS_VERSION: windows2012R2
        ADMINISTRATOR_PASSWORD: "Password123!"
        AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
        AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
        AWS_REGION: us-east-1
    - put: updated-vmx-version
      params: {bump: major}
    ensure:
      put: vsphere-worker-lock
      params:
        release: vsphere-worker-lock

- name: create-vsphere-stemcell-from-vmx
  serial: true
  plan:
  - put: vsphere-worker-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
        tags: [vsphere-windows]
      - get: stemcell-builder
        tags: [vsphere-windows]
        passed: [build-stemcells]
      - get: windows-stemcell-dependencies
        tags: [vsphere-windows]
      - get: version
        tags: [vsphere-windows]
        resource: vsphere-stemcell-version
        passed: [build-stemcells]
        trigger: true
      - get: vmx-version
        tags: [vsphere-windows]
        resource: updated-vmx-version
        passed: [build-stemcells]
      - get: stemcells-main-version
        passed: [build-stemcells]
      - get: sshd
        resource: openssh-release
        version: { tag: ((OPEN_SSH_VERSION)) }
      - get: stembuild
    - put: version
      resource: vsphere-stemcell-version
      params:
        pre: build
    - task: create-stemcell
      privileged: true
      file: ci/bosh-windows-stemcell-builder/create-vsphere-stemcell-from-vmx/task.yml
      tags: [vsphere-windows-worker]
      params:
        ADMINISTRATOR_PASSWORD: "Password123!"
        NEW_PASSWORD: "Password123!"
        ORGANIZATION: Pivotal
        OWNER: Pivotal
        AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
        AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
        AWS_REGION: us-east-1
    ensure:
      put: vsphere-worker-lock
      params:
        release: vsphere-worker-lock

- name: test-vsphere-stemcell-from-vmx
  serial-groups: ["vsphere-director"]
  serial: true
  plan:
  - put: vsphere-director-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: bosh-windows-stemcell
        tags: [vsphere-windows]
        resource: vsphere-stemcell-pre-release-candidate-from-vmx
        trigger: true
      - get: stemcell-builder
        passed: [create-vsphere-stemcell-from-vmx]
      - get: version
        resource: vsphere-stemcell-version
        passed: [create-vsphere-stemcell-from-vmx]
      - get: stemcells-main-version
        passed: [create-vsphere-stemcell-from-vmx]
    - task: test-stemcell
      tags: [vsphere-windows]
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      attempts: 5
      params:
        VM_TYPE: large
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_CLIENT: ((regina_client))
        BOSH_TARGET: ((regina_environment))
        BOSH_CA_CERT: ((regina_ca_cert))
        STEMCELL_PATH: bosh-windows-stemcell/bosh-stemcell-*-vsphere-esxi-windows2012R2-go_agent.tgz
        STEMCELL_OS: windows2012R2
    - put: vsphere-stemcell-release-candidate
      params:
        file: bosh-windows-stemcell/bosh-stemcell-*-vsphere-esxi-windows2012R2-go_agent.tgz
    ensure:
      put: vsphere-director-lock
      params:
        release: vsphere-director-lock

- name: build-stemcells
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder
      passed: [test-stemcell-builder]
    - get: windows-stemcell-dependencies
    - get: updated-vmx-version
      passed: [create-vsphere-add-updates]
    - get: version
      resource: stemcells-main-version
      params:
        bump: patch
  - put: stemcells-main-version
    params:
      file: version/number
  - aggregate:
    - put: vsphere-stemcell-version
      params:
        file: version/number
    - put: aws-stemcell-version
      params:
        file: version/number
    - put: gcp-stemcell-version
      params:
        file: version/number
    - put: azure-stemcell-version
      params:
        file: version/number
  - aggregate:
    - task: collect-win2012r2-amis
      file: ci/collect-base-amis/task.yml
      output_mapping: { base-amis: win2012r2-amis }
      params:
        AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_AWS_READ_VPC_EC2_ACCESS_KEY_ID))
        AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_AWS_READ_VPC_EC2_SECRET_ACCESS_KEY))
        BASE_AMI: windows2012R2
    - task: collect-win2012r2-gcp-image
      file: ci/collect-gcp-image/task.yml
      output_mapping: { base-gcp-image: win2012r2-gcp-image }
      params:
        ACCOUNT_JSON: ((CFF-BOSH-WINDOWS-STEMCELLS_ACCOUNT_JSON))
        BASE_OS: windows2012R2
  - aggregate:
    - put: base-amis-win2012r2
      params:
        file: win2012r2-amis/base-amis-windows2012R2-*.json
    - put: base-gcp-image-win2012r2
      params:
        file: win2012r2-gcp-image/base-gcp-image-windows2012R2-*.json

- name: create-vsphere-stemcell-from-diff
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: version
      passed: [build-stemcells]
      resource: vsphere-stemcell-version
      trigger: true
    - get: stemcell-builder
      passed: [build-stemcells]
    - get: windows-stemcell-dependencies
    - get: stemcells-main-version
      passed: [build-stemcells]
    - get: sshd
      resource: openssh-release
      version: { tag: ((OPEN_SSH_VERSION)) }
    - get: stembuild
  - put: version
    resource: vsphere-stemcell-version
    params:
      pre: build
  - task: create-stemcell
    privileged: true
    file: ci/bosh-windows-stemcell-builder/create-vsphere-stemcell-from-diff/task.yml
    tags: [diffcell-windows-worker]
    params:
      ADMINISTRATOR_PASSWORD: "Password123!"
      OS_VERSION: windows2012R2
      PRODUCT_KEY: D2N9P-3P6X9-2R39C-7RTCD-MDVJX
      ORGANIZATION: Pivotal
      OWNER: Pivotal
      STEMCELL_DEPS_DIR: ../windows-stemcell-dependencies
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
      AWS_REGION: us-east-1
      VHD_VMDK_BUCKET: bosh-windows-diffcell
      DIFF_OUTPUT_BUCKET: bosh-windows-diffcell
      STEMCELL_OUTPUT_BUCKET: "bosh-windows-stemcells-pre-release-candidate"
      CACHE_DIR: "C:\\image-data"

- name: test-vsphere-stemcell-from-diff
  serial-groups: ["vsphere-director"]
  serial: true
  plan:
  - put: vsphere-director-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: bosh-windows-stemcell
        tags: [vsphere-windows]
        resource: vsphere-stemcell-pre-release-candidate
        trigger: true
      - get: stemcell-builder
        passed: [create-vsphere-stemcell-from-diff]
      - get: version
        resource: vsphere-stemcell-version
        passed: [create-vsphere-stemcell-from-diff]
      - get: stemcells-main-version
        passed: [create-vsphere-stemcell-from-diff]
    - task: test-stemcell
      tags: [vsphere-windows]
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      attempts: 5
      params:
        VM_TYPE: large
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_CLIENT: ((regina_client))
        BOSH_TARGET: ((regina_environment))
        BOSH_CA_CERT: ((regina_ca_cert))
        STEMCELL_PATH: bosh-windows-stemcell/bosh-stemcell-*-diff-vsphere-esxi-windows2012R2-go_agent.tgz
        STEMCELL_OS: windows2012R2
    - put: vsphere-stemcell-release-candidate-diff
      params:
        file: bosh-windows-stemcell/bosh-stemcell-*-diff-vsphere-esxi-windows2012R2-go_agent.tgz
    ensure:
      put: vsphere-director-lock
      params:
        release: vsphere-director-lock

- name: build-aws-regional-amis
  serial: true
  plan:
  - put: aws-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: stemcell-builder
        # passed: [build-stemcells]
      - get: base-amis
        resource: base-amis-win2012r2
        passed: [build-stemcells]
      - get: version
        resource: aws-stemcell-version
        passed: [build-stemcells]
        trigger: true
      - get: windows-stemcell-dependencies
      - get: stemcells-main-version
        passed: [build-stemcells]
      - get: sshd
        resource: openssh-release
        version: { tag: ((OPEN_SSH_VERSION)) }
    - task: cleanup-aws-regional-stemcells
      params:
        REGION: us-east-1
        AWS_SECRET_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
        AWS_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      file: ci/bosh-windows-stemcell-builder/cleanup-aws-regional-stemcells/task.yml
    - put: version
      resource: aws-stemcell-version
      params:
        pre: build
    - task: create-packer-ci-key
      privileged: true
      config:
        platform: linux
        image_resource: { type: docker-image, source: {repository: pivotalgreenhouse/ci } }
        outputs:
        - name: packer-ci-private-key
        run:
          path: bash
          args:
          - "-c"
          - 'echo "$PACKER_CI" > packer-ci-private-key/key && chmod 600 packer-ci-private-key/key'
        params:
          PACKER_CI: ((PACKER_CI_PRIVATE_KEY))
    - aggregate:
      - task: create-stemcell-us-east-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: us-east-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-us-east-2
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: us-east-2
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-us-west-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: us-west-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-us-west-2
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: us-west-2
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-ca-central-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: ca-central-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-ap-south-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: ap-south-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-ap-northeast-2
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: ap-northeast-2
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-ap-southeast-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: ap-southeast-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-ap-southeast-2
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: ap-southeast-2
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-ap-northeast-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: ap-northeast-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-eu-central-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: eu-central-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-eu-west-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: eu-west-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-eu-west-2
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: eu-west-2
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
      - task: create-stemcell-sa-east-1
        timeout: 1h30m
        attempts: 3
        file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
        params:
          OS_VERSION: windows2012R2
          REGION: sa-east-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
    ensure:
      aggregate:
        - put: aws-lock
          params:
            release: aws-lock
        - task: delete-orphan-vms
          file: ci/delete-vms/task.yml
          params:
            AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))

- name: create-aws-stemcell
  serial: true
  plan:
  - put: aws-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: stemcell-builder
        passed: [build-aws-regional-amis]
      - get: base-amis
        resource: base-amis-win2012r2
        passed: [build-aws-regional-amis]
      - get: version
        resource: aws-stemcell-version
        passed: [build-aws-regional-amis]
        trigger: true
      - get: windows-stemcell-dependencies
      - get: stemcells-main-version
        passed: [build-aws-regional-amis]
      - get: sshd
        resource: openssh-release
        version: { tag: ((OPEN_SSH_VERSION)) }
    - task: aggregate-the-amis
      file: ci/bosh-windows-stemcell-builder/aggregate-the-amis/task.yml
      params:
          REGION: us-east-1
          AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
          AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
    - task: test-stemcell
      input_mapping: { bosh-windows-stemcell: bosh-windows-stemcell-final }
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      attempts: 5
      params:
        BOSH_CLIENT_SECRET: ((BOSH_CONCOURSE_BOSH_PASSWORD))
        BOSH_CLIENT: ((BOSH_CONCOURSE_BOSH_USER))
        BOSH_TARGET: ((BOSH_CONCOURSE_DIRECTOR_IP))
        BOSH_CA_CERT: ((BOSH_CONCOURSE_BOSH_TARGET_CERT))
        STEMCELL_PATH: bosh-windows-stemcell/light-bosh-stemcell-*-aws-xen-hvm-windows2012R2-go_agent.tgz
        STEMCELL_OS: windows2012R2
    - put: aws-stemcell-release-candidate
      params:
        file: bosh-windows-stemcell-final/light-bosh-stemcell-*-aws-xen-hvm-windows2012R2-go_agent.tgz
    ensure:
      aggregate:
        - put: aws-lock
          params:
            release: aws-lock

- name: create-gcp-stemcell
  serial: true
  plan:
  - put: gcp-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: stemcell-builder
        passed: [build-stemcells]
      - get: base-gcp-image
        resource: base-gcp-image-win2012r2
        passed: [build-stemcells]
      - get: version
        resource: gcp-stemcell-version
        passed: [build-stemcells]
        trigger: true
      - get: windows-stemcell-dependencies
      - get: stemcells-main-version
        passed: [build-stemcells]
      - get: sshd
        resource: openssh-release
        version: { tag: ((OPEN_SSH_VERSION)) }
    - put: version
      resource: gcp-stemcell-version
      params:
        pre: build
    - task: create-stemcell
      file: ci/bosh-windows-stemcell-builder/create-gcp-stemcell/task.yml
      attempts: 10
      params:
        OS_VERSION: windows2012R2
        ACCOUNT_JSON: ((CFF-BOSH-WINDOWS-STEMCELLS_ACCOUNT_JSON))
      ensure:
        task: delete-orphan-vms
        file: ci/delete-vms/task.yml
        params:
          ACCOUNT_JSON: ((CFF-BOSH-WINDOWS-STEMCELLS_ACCOUNT_JSON))
    - task: test-stemcell
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      params:
        IAAS: gcp
        ACCOUNT_JSON: ((CF-GREENHOUSE-GOOSE_ACCOUNT_JSON))
        BOSH_CLIENT_SECRET: ((goose_client_secret))
        BOSH_CLIENT: ((goose_client))
        BOSH_TARGET: ((goose_environment))
        BOSH_CA_CERT: ((goose_ca_cert))
        STEMCELL_PATH: bosh-windows-stemcell/light-bosh-stemcell-*-google-kvm-windows2012R2-go_agent.tgz
        NETWORK: private
        VM_EXTENSIONS: "50GB_ephemeral_disk"
        STEMCELL_OS: windows2012R2
    - put: gcp-2012R2-stemcell-release-candidate
      params:
        file: bosh-windows-stemcell/light-bosh-stemcell-*-google-kvm-windows2012R2-go_agent.tgz
    ensure:
      put: gcp-lock
      params:
        release: gcp-lock

- name: create-azure-stemcell
  serial: true
  plan:
  - put: azure-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: stemcell-builder
        passed: [build-stemcells]
      - get: version
        resource: azure-stemcell-version
        passed: [build-stemcells]
        trigger: true
      - get: windows-stemcell-dependencies
      - get: stemcells-main-version
        passed: [build-stemcells]
      - get: sshd
        resource: openssh-release
        version: { tag: ((OPEN_SSH_VERSION)) }
    - put: version
      resource: azure-stemcell-version
      params:
        pre: build
    - task: create-stemcell
      file: ci/bosh-windows-stemcell-builder/create-azure-stemcell/task.yml
      params:
        OS_VERSION: windows2012R2
        CLIENT_ID: ((KOALA_AZURE_CLIENT_ID))
        CLIENT_SECRET: ((KOALA_AZURE_CLIENT_SECRET))
        TENANT_ID: ((KOALA_AZURE_TENANT_ID))
        SUBSCRIPTION_ID: ((KOALA_AZURE_SUBSCRIPTION_ID))
        OBJECT_ID: ((KOALA_AZURE_OBJECT_ID))
        RESOURCE_GROUP_NAME: ((KOALA_AZURE_RESOURCE_GROUP))
        STORAGE_ACCOUNT: ((KOALA_AZURE_STORAGE_ACCOUNT))
        LOCATION: 'East US'
        VM_SIZE: Standard_DS2_v2
        PUBLISHER: 'pivotal'
        OFFER: 'bosh-windows-server'
        SKU: '2012r2'
        ADMIN_PASSWORD: ((AZURE_STEMCELL_ADMIN_PASSWORD))
      ensure:
        task: delete-orphan-vms
        file: ci/delete-vms/task.yml
        params:
          CLIENT_ID: ((KOALA_AZURE_CLIENT_ID))
          CLIENT_SECRET: ((KOALA_AZURE_CLIENT_SECRET))
          TENANT_ID: ((KOALA_AZURE_TENANT_ID))
          SUBSCRIPTION_ID: ((KOALA_AZURE_SUBSCRIPTION_ID))
    - put: azure-stemcell-pre-release-candidate
      params:
        file: bosh-windows-stemcell/light-bosh-stemcell-*-azure-hyperv-windows2012R2-go_agent.tgz
    - put: azure-base-vhd-uri
      params:
        file: bosh-windows-stemcell/bosh-stemcell-*-azure-vhd-uri.txt
    ensure:
      put: azure-lock
      params:
        release: azure-lock

- name: print-azure-publishing-instructions
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder
      # passed: [create-azure-stemcell]
    - get: version
      resource: azure-stemcell-version
      passed: [create-azure-stemcell]
    - get: stemcells-main-version
      passed: [create-azure-stemcell]
    - get: azure-stemcell-pre-release-candidate
      passed: [create-azure-stemcell]
    - get: azure-base-vhd-uri
      passed: [create-azure-stemcell]
  - task: print-azure-publishing-instructions
    file: ci/bosh-windows-stemcell-builder/print-azure-publishing-instructions/task.yml
    params:
      SKU: '2012r2'
      AZURE_STORAGE_ACCOUNT: ((KOALA_AZURE_STORAGE_ACCOUNT))
      AZURE_STORAGE_ACCESS_KEY: ((KOALA_AZURE_STORAGE_ACCESS_KEY))
      AZURE_TENANT_ID: ((KOALA_AZURE_TENANT_ID))
      AZURE_CLIENT_ID: ((KOALA_AZURE_CLIENT_ID))
      AZURE_CLIENT_SECRET: ((KOALA_AZURE_CLIENT_SECRET))
      CONTAINER_NAME: 'system'

- name: test-azure-stemcell
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder
      passed: [create-azure-stemcell]
    - get: azure-stemcell-version
      passed: [create-azure-stemcell]
    - get: stemcells-main-version
      passed: [create-azure-stemcell]
    - get: bosh-windows-stemcell
      resource: azure-stemcell-pre-release-candidate
      passed: [create-azure-stemcell]
    - get: azure-base-vhd-uri
      passed: [create-azure-stemcell]
  - task: test-stemcell
    file: ci/bosh-windows-stemcell-builder/bwats-azure/task.yml
    tags: [azure-windows-worker]
    params:
      BOSH_CA_CERT: ((KOALA_BOSH_TARGET_CERT))
      BOSH_CLIENT: ((KOALA_BOSH_CLIENT_ID))
      BOSH_CLIENT_SECRET: ((KOALA_BOSH_CLIENT_SECRET))
      BOSH_TARGET: ((KOALA_BOSH_DIRECTOR_IP))
      AZ: z1
      VM_TYPE: default
      NETWORK: default
      STEMCELL_OS: windows2012R2
      WORKING_DIR: 'F:/'
      AZURE_SOURCE_KEY: ((KOALA_AZURE_STORAGE_ACCESS_KEY))
  - put: azure-stemcell-release-candidate
    params:
      file: azure-stemcell-pre-release-candidate/light-bosh-stemcell-*-azure-hyperv-windows2012R2-go_agent.tgz


- name: promote-aws-gcp-vsphere
  serial-groups: ["vsphere-director"]
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: vsphere-stemcell-release-candidate
      tags: [vsphere-windows]
      passed: [test-vsphere-stemcell-from-vmx]
    - get: aws-stemcell-release-candidate
      passed: [create-aws-stemcell]
    - get: gcp-stemcell-release-candidate
      passed: [create-gcp-stemcell]
      resource: gcp-2012R2-stemcell-release-candidate
    - get: stemcell-builder
      passed: [create-gcp-stemcell,create-aws-stemcell,test-vsphere-stemcell-from-vmx]
    - get: version
      resource: stemcells-main-version
      passed: [create-gcp-stemcell,create-aws-stemcell,test-vsphere-stemcell-from-vmx]
  - task: ensure-versions-match
    tags: [vsphere-windows]
    config:
      platform: linux
      image_resource: {type: docker-image, source: {repository: pivotalgreenhouse/ci}}
      inputs:
        - name: ci
        - name: vsphere-stemcell-release-candidate
        - name: aws-stemcell-release-candidate
        - name: gcp-stemcell-release-candidate
      run:
        path: ci/match-stemcell-versions/run
  - aggregate:
    - put: aws-lock
      params:
        acquire: true
    - put: gcp-lock
      params:
        acquire: true
    - put: vsphere-director-lock
      params:
        acquire: true
  - aggregate:
    - task: test-aws-stemcell
      input_mapping: { bosh-windows-stemcell: aws-stemcell-release-candidate }
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      attempts: 5
      params:
        BOSH_CLIENT_SECRET: ((BOSH_CONCOURSE_BOSH_PASSWORD))
        BOSH_CLIENT: ((BOSH_CONCOURSE_BOSH_USER))
        BOSH_TARGET: ((BOSH_CONCOURSE_DIRECTOR_IP))
        BOSH_CA_CERT: ((BOSH_CONCOURSE_BOSH_TARGET_CERT))
        STEMCELL_PATH: bosh-windows-stemcell/light-bosh-stemcell-*-aws-xen-hvm-windows2012R2-go_agent.tgz
        STEMCELL_OS: windows2012R2
      ensure:
        put: aws-lock
        params:
          release: aws-lock
    - task: test-gcp-stemcell
      input_mapping: { bosh-windows-stemcell: gcp-stemcell-release-candidate }
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      params:
        IAAS: gcp
        ACCOUNT_JSON: ((CF-GREENHOUSE-GOOSE_ACCOUNT_JSON))
        BOSH_CLIENT_SECRET: ((goose_client_secret))
        BOSH_CLIENT: ((goose_client))
        BOSH_TARGET: ((goose_environment))
        BOSH_CA_CERT: ((goose_ca_cert))
        STEMCELL_PATH: bosh-windows-stemcell/light-bosh-stemcell-*-google-kvm-windows2012R2-go_agent.tgz
        NETWORK: private
        VM_EXTENSIONS: "50GB_ephemeral_disk"
        STEMCELL_OS: windows2012R2
      ensure:
        put: gcp-lock
        params:
          release: gcp-lock
    - task: test-vsphere-stemcell
      input_mapping: { bosh-windows-stemcell: vsphere-stemcell-release-candidate }
      tags: [vsphere-windows]
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      attempts: 5
      params:
        VM_TYPE: large
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_CLIENT: ((regina_client))
        BOSH_TARGET: ((regina_environment))
        BOSH_CA_CERT: ((regina_ca_cert))
        STEMCELL_PATH: bosh-windows-stemcell/bosh-stemcell-*-vsphere-esxi-windows2012R2-go_agent.tgz
        STEMCELL_OS: windows2012R2
      ensure:
        put: vsphere-director-lock
        params:
          release: vsphere-director-lock
  - aggregate:
    - task: vsphere-set-stemcell-filename-version
      tags: [vsphere-windows]
      input_mapping: { bosh-windows-stemcell: vsphere-stemcell-release-candidate }
      output_mapping: { final-stemcell: vsphere-stemcell-final }
      file: ci/set-stemcell-version/task.yml
    - task: aws-set-stemcell-filename-version
      tags: [vsphere-windows]
      input_mapping: { bosh-windows-stemcell: aws-stemcell-release-candidate }
      output_mapping: { final-stemcell: aws-stemcell-final }
      file: ci/set-stemcell-version/task.yml
    - task: gcp-set-stemcell-filename-version
      tags: [vsphere-windows]
      input_mapping: { bosh-windows-stemcell: gcp-stemcell-release-candidate }
      output_mapping: { final-stemcell: gcp-stemcell-final }
      file: ci/set-stemcell-version/task.yml
  - task: create-major-stemcell
    tags: [vsphere-windows]
    file: ci/create-major-stemcell/task.yml
    input_mapping: { final-stemcell: aws-stemcell-final }
  - aggregate:
    - put: major-stemcell-s3
      resource: major-stemcell
      tags: [vsphere-windows]
      params:
        file: stemcell-info/stemcell-*.json
    - put: vsphere-stemcell-final-s3
      resource: vsphere-stemcell-final
      tags: [vsphere-windows]
      params:
        file: vsphere-stemcell-final/bosh-stemcell-*-vsphere-esxi-windows2012R2-go_agent.tgz
    - put: aws-stemcell-final-s3
      resource: aws-stemcell-final
      tags: [vsphere-windows]
      params:
        file: aws-stemcell-final/light-bosh-stemcell-*-aws-xen-hvm-windows2012R2-go_agent.tgz
    - put: gcp-stemcell-final-s3
      resource: gcp-stemcell-final
      tags: [vsphere-windows]
      params:
        file: gcp-stemcell-final/light-bosh-stemcell-*-google-kvm-windows2012R2-go_agent.tgz

- name: promote-boshio
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: gcp-stemcell-final
      passed: [promote-aws-gcp-vsphere]
    - get: azure-stemcell-final
      passed: [promote-azure]
    - get: aws-stemcell-final
      passed: [promote-aws-gcp-vsphere]
    - get: version
      resource: stemcells-main-version
      passed: [promote-aws-gcp-vsphere]
    - get: stemcell-builder
      passed: [create-gcp-stemcell,create-aws-stemcell,test-vsphere-stemcell-from-vmx]
  - aggregate:
    - task: azure-post-boshio-stemcell-sha
      tags: [vsphere-windows]
      file: ci/post-boshio-stemcell-sha/task.yml
      input_mapping: { final-stemcell: azure-stemcell-final }
      params:
        BOSHIO_TOKEN: ((BOSHIO_TOKEN))
    - task: aws-post-boshio-stemcell-sha
      tags: [vsphere-windows]
      file: ci/post-boshio-stemcell-sha/task.yml
      input_mapping: { final-stemcell: aws-stemcell-final }
      params:
        BOSHIO_TOKEN: ((BOSHIO_TOKEN))
    - task: gcp-post-boshio-stemcell-sha
      tags: [vsphere-windows]
      file: ci/post-boshio-stemcell-sha/task.yml
      input_mapping: { final-stemcell: gcp-stemcell-final }
      params:
        BOSHIO_TOKEN: ((BOSHIO_TOKEN))
  - put: stemcells-main-version
    params:
      bump: minor

- name: promote-azure
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: vsphere-stemcell-release-candidate
      tags: [vsphere-windows]
      passed: [test-vsphere-stemcell-from-vmx]
    - get: gcp-stemcell-release-candidate
      passed: [create-gcp-stemcell]
      resource: gcp-2012R2-stemcell-release-candidate
    - get: azure-stemcell-release-candidate
      passed: [test-azure-stemcell]
    - get: aws-stemcell-release-candidate
      passed: [promote-aws-gcp-vsphere]
    - get: version
      resource: stemcells-main-version
      passed: [promote-aws-gcp-vsphere]
    - get: stemcell-builder
      passed: [promote-aws-gcp-vsphere]
  - task: ensure-versions-match
    tags: [vsphere-windows]
    config:
      platform: linux
      image_resource: {type: docker-image, source: {repository: pivotalgreenhouse/ci}}
      inputs:
        - name: ci
        - name: vsphere-stemcell-release-candidate
        - name: aws-stemcell-release-candidate
        - name: gcp-stemcell-release-candidate
        - name: azure-stemcell-release-candidate
      run:
        path: ci/match-stemcell-versions/run
  - put: azure-lock
    params:
      acquire: true
  - task: test-azure-stemcell
    input_mapping: { bosh-windows-stemcell: azure-stemcell-release-candidate }
    file: ci/bosh-windows-stemcell-builder/bwats/task.yml
    params:
      IAAS: azure
      ACCOUNT_JSON:
      BOSH_CA_CERT: ((DINGO_BOSH_TARGET_CERT))
      BOSH_CLIENT: ((DINGO_BOSH_CLIENT_ID))
      BOSH_CLIENT_SECRET: ((DINGO_BOSH_CLIENT_SECRET))
      BOSH_TARGET: ((DINGO_BOSH_DIRECTOR_IP))
      STEMCELL_PATH: bosh-windows-stemcell/light-bosh-stemcell-*-azure-hyperv-windows2012R2-go_agent.tgz
      AZ: z1
      VM_TYPE: default
      NETWORK: default
      STEMCELL_OS: windows2012R2
    ensure:
      put: azure-lock
      params:
        release: azure-lock
  - task: azure-set-stemcell-filename-version
    tags: [vsphere-windows]
    input_mapping: { bosh-windows-stemcell: azure-stemcell-release-candidate }
    output_mapping: { final-stemcell: azure-stemcell-final }
    file: ci/set-stemcell-version/task.yml
  - put: azure-stemcell-final-s3
    resource: azure-stemcell-final
    tags: [vsphere-windows]
    params:
      file: azure-stemcell-final/light-bosh-stemcell-*-azure-hyperv-windows2012R2-go_agent.tgz

- name: ship-bosh-stemcell-builder
  serial: true
  plan:
  - aggregate:
    - get: stemcell-builder
      passed: [promote-aws-gcp-vsphere]
    - get: stemcells-main-version
      passed: [promote-aws-gcp-vsphere]
      trigger: true
    - get: vsphere-stemcell
      resource: vsphere-stemcell-final
      passed: [promote-aws-gcp-vsphere]
      tags: [vsphere-windows]
  - aggregate:
    - task: shorten-stemcell-version
      config:
        platform: linux
        image_resource: { type: docker-image, source: {repository: pivotalgreenhouse/ci } }
        inputs:
        - name: stemcells-main-version
        outputs:
        - name: stemcell-builder-release-version
        run:
          path: bash
          args:
          - "-c"
          - "cat stemcells-main-version/version | rev | cut -c 3- | rev > stemcell-builder-release-version/version"
    - task: build-psmodules-zip
      config:
        platform: linux
        image_resource: { type: docker-image, source: {repository: pivotalgreenhouse/ci } }
        inputs:
        - name: stemcell-builder
        outputs:
        - name: bosh-psmodules
        run:
          path: bash
          args:
          - "-c"
          - "cd stemcell-builder && bundle && rake package:psmodules && mv build/*.zip ../bosh-psmodules"
    - task: build-agent-zip
      config:
        platform: linux
        image_resource: { type: docker-image, source: {repository: pivotalgreenhouse/ci } }
        inputs:
        - name: stemcell-builder
        outputs:
        - name: bosh-agent
        run:
          path: bash
          args:
          - "-c"
          - "cd stemcell-builder && bundle && rake package:agent && mv build/*.zip ../bosh-agent"
    - task: get-stemcell-builder-sha
      config:
        platform: linux
        image_resource: { type: docker-image, source: {repository: pivotalgreenhouse/ci } }
        inputs:
        - name: stemcell-builder
        outputs:
        - name: stemcell-builder-commit
        run:
          path: bash
          args:
          - "-c"
          - "cd stemcell-builder && git rev-parse HEAD > ../stemcell-builder-commit/sha"
  - put: stemcell-builder-release
    tags: [vsphere-windows]
    params:
      name: stemcell-builder-release-version/version
      tag: stemcell-builder-release-version/version
      commitish: stemcell-builder-commit/sha
      globs:
      - bosh-psmodules/bosh-psmodules.zip
      - bosh-agent/agent.zip
