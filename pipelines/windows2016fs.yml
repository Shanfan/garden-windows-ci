resources:
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/greenhouse-ci.git
- name: windows2016fs-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry-incubator/windows2016fs-release.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINDOWS2016FS_DEPLOY_KEY}}
- name: windows2016fs-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/windows2016fs-release.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINDOWS2016FS_DEPLOY_KEY}}
- name: windows2016fs-dockerfile
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry-incubator/windows2016fs-release.git
    paths: [ src/Dockerfile ]
- name: git-setup
  type: github-release
  source:
    user: git-for-windows
    repository: git
    access_token: {{GREENHOUSE_CI_ACCESS_TOKEN}}
- name: tar
  type: s3
  source:
    bucket: bosh-windows-dependencies
    regexp: tar-(.*).exe
    access_key_id: {{BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID}}
    secret_access_key: {{BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY}}
- name: version
  type: semver
  source:
    access_key_id: {{BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID}}
    secret_access_key: {{BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY}}
    bucket: windows2016fs
    initial_version: 0.0.0
    key: version
    region_name: us-east-1

jobs:
- name: build-and-push
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windows2016fs-dockerfile
      trigger: true
    - get: git-setup
      trigger: true
      params:
        globs: [Git-*-64-bit.exe]
    - get: tar
      trigger: true
    - get: version
    - put: version
      params: {bump: patch}
  - task: build-and-push
    tags: [docker-builder]
    file: ci/docker-build-and-push/task.yml
    input_mapping:
      repo: windows2016fs-dockerfile
    params:
      DOCKERFILE: repo/src/Dockerfile
      IMAGE_NAME: cloudfoundry/windows2016fs
      DOCKER_USERNAME: {{DOCKER_USERNAME}}
      DOCKER_PASSWORD: {{DOCKER_PASSWORD}}

- name: test-hydrate-windows
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windows2016fs-develop
      trigger: true
  - task: run-ginkgo-exe
    file: ci/run-ginkgo-exe/task.yml
    input_mapping:
      repo: windows2016fs-develop
    params:
      TEST_PATH: src/hydrate

- name: test-hydrate-linux
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windows2016fs-develop
      trigger: true
  - task: run-ginkgo
    file: ci/run-ginkgo/task.yml
    input_mapping:
      repo: windows2016fs-develop
    params:
      TEST_PATH: src/hydrate

- name: update-blob
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windows2016fs-develop
      trigger: true
      passed:
      - test-hydrate-linux
      - test-hydrate-windows
    - get: version
      trigger: true
      passed: [build-and-push]
  - task: update-blob
    file: ci/update-windows2016fs-blob/task.yml
    input_mapping: { windows2016fs-release: windows2016fs-develop }
  - task: commit-changes
    file: ci/commit/task.yml
    input_mapping:
      source_repo: windows2016fs-release-updated-blob
      destination_repo: windows2016fs-release-updated-blob
    output_mapping:
      destination_repo_with_commit: windows2016fs-release-updated-commit
    params:
      MESSAGE: "Updated image blob and version"
  - put: windows2016fs-develop
    params:
      repository: windows2016fs-release-updated-commit
      rebase: false

- name: test-create-release
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: windows2016fs-develop
      trigger: true
      passed: [update-blob]
  - aggregate:
    - do:
      - task: hydrate-release-windows
        file: ci/hydrate-release-windows/task.yml
        input_mapping: { windows2016fs-release: windows2016fs-develop }
        output_mapping: { hydrated-release: hydrated-release-windows }
      - task: git-checkout
        file: ci/git-checkout/task.yml
        input_mapping: { repo: hydrated-release-windows }
      - task: create-release
        file: ci/bosh-cr/task.yml
        input_mapping: { release: cleaned-repo }
    - do:
      - task: hydrate-release-linux
        file: ci/hydrate-release-linux/task.yml
        input_mapping: { windows2016fs-release: windows2016fs-develop }
      - task: create-release
        file: ci/bosh-cr/task.yml
        input_mapping: { release: hydrated-release }

- name: merge-to-master
  plan:
  - aggregate:
    - get: ci
    - get: windows2016fs-develop
      trigger: true
      passed: [test-create-release]
    - get: windows2016fs-master
  - task: merge-develop-to-master
    file: ci/merge-repo/task.yml
    input_mapping:
      from-repo: windows2016fs-develop
      to-repo: windows2016fs-master
    params:
      FROM_BRANCH: develop
  - put: windows2016fs-master
    params:
      repository: merged-repo/to-repo
