resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/greenhouse-ci.git
- name: winc-develop
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry-incubator/winc.git
- name: winc-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/winc.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINC_DEPLOY_KEY}}
- name: wats
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/wats
- name: cf-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment.git
    tag_filter: v*
- name: garden-windows-private
  type: git
  source:
    branch: master
    private_key: {{GARDEN_WINDOWS_CI_GITHUB_PRIVATE_KEY}}
    uri: git@github.com:pivotal-cf/garden-windows-private
- name: windows2016fs-release
  type: git
  source:
    branch: master
    private_key: {{GARDEN_WINDOWS_CI_GITHUB_PRIVATE_KEY}}
    uri: git@github.com:cloudfoundry-incubator/windows2016fs-release
- name: windows2016fs
  type: git
  source:
    branch: master
    private_key: {{GARDEN_WINDOWS_CI_GITHUB_PRIVATE_KEY}}
    uri: git@github.com:cloudfoundry-incubator/windows2016fs
# - name: wincni-develop
#   type: git
#   source:
#     branch: develop
#     uri: https://github.com/cloudfoundry/wincni.git
# - name: wincni-master
#   type: git
#   source:
#     branch: master
#     uri: git@github.com:cloudfoundry/wincni.git
#     private_key: {{CLOUDFOUNDRY_WINCNI_DEPLOY_KEY}}
- name: winc-release-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry-incubator/winc-release.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINC-RELEASE_DEPLOY_KEY}}
- name: winc-release-develop-trigger
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry-incubator/winc-release.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINC-RELEASE_DEPLOY_KEY}}
    ignore_paths:
      - .final_builds/**/*
      - releases/**/*
- name: winc-release-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/winc-release.git
    private_key: {{CLOUDFOUNDRYINCUBATOR_WINC-RELEASE_DEPLOY_KEY}}
- name: garden-runc-release
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/garden-runc-release.git
# - name: cf-networking-release
#   type: git
#   source:
#     branch: develop
#     uri: https://github.com/cloudfoundry-incubator/cf-networking-release.git
- name: gats-fork
  type: git
  source:
    branch: fork-master
    uri: https://github.com/greenhouse-org/garden-integration-tests.git
- name: gcp-windows-stemcell
  type: s3
  source:
    bucket: bosh-windows-stemcells-release-candidates
    regexp: light-bosh-stemcell-(.*)-google-kvm-windows2016-go_agent.tgz
- name: pesto-lock-pool
  type: pool
  source:
    branch: master
    pool: pesto
    private_key: {{GREENHOUSE-CI_SSH_KEY}}
    uri: git@github.com:greenhouse-ci/locks
- name: every-2hrs
  type: time
  source:
    interval: 2h
- name: version
  type: semver
  source:
    access_key_id: {{BOSH_WINDOWS_S3_ADMIN_ACCESS_KEY_ID}}
    secret_access_key: {{BOSH_WINDOWS_S3_ADMIN_SECRET_ACCESS_KEY}}
    bucket: winc-release
    initial_version: 0.0.0
    key: version
    region_name: us-east-1
- name: winc-release-github-release
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: winc-release
    drafts: true
    access_token: {{GREENHOUSE_CI_ACCESS_TOKEN}}
- name: pesto-cf-deployment
  type: bosh-deployment
  source:
    deployment: cf
    client: {{PESTO_BOSH_CLIENT}}
    client_secret: {{PESTO_BOSH_CLIENT_SECRET}}
    ca_cert: {{PESTO_BOSH_CA_CERT}}
    target: {{PESTO_BOSH_ENVIRONMENT}}
    vars_store:
      provider: gcs
      config:
        bucket: cff-greenhouse-pesto
        file_name: cf/creds.yml
        json_key: {{PESTO_SERVICE_ACCOUNT_JSON}}
jobs:
- name: winc
  serial: true
  serial_groups: [window2016]
  plan:
  - aggregate:
    - get: ci
    - get: every-2hrs
      trigger: true
    - get: winc-develop
      trigger: true
    - get: winc-master
    - get: windows2016fs
  - aggregate:
    - task: test
      input_mapping: { winc: winc-develop }
      file: ci/test-winc/task.yml
    - task: test-insider
      input_mapping: { winc: winc-develop }
      file: ci/test-winc/task.yml
      params:
        INSIDER_PREVIEW: true
        TEST_CONTAINER_IMAGE_TAG: "insider-10.0.16278.1000"
      tags: [windows2016-insider-16278]
  - task: merge-develop-to-master
    input_mapping: { from-repo: winc-develop, to-repo: winc-master }
    file: ci/merge-repo/task.yml
    params: { FROM_BRANCH: develop }
  - put: winc-master
    params: { repository: merged-repo/to-repo }

# - name: wincni
#   serial: true
#   plan:
#   - aggregate:
#     - get: ci
#     - get: every-2hrs
#       trigger: true
#     - get: wincni-develop
#       trigger: true
#     - get: wincni-master
#   - task: test
#     input_mapping: { wincni: wincni-develop }
#     file: ci/test-wincni/task.yml
#   - task: merge-develop-to-master
#     input_mapping: { from-repo: wincni-develop, to-repo: wincni-master }
#     file: ci/merge-repo/task.yml
#     params: { FROM_BRANCH: develop }
#   - put: wincni-master
#     params: { repository: merged-repo/to-repo }

# - name: wincni-smoke
#   serial: true
#   serial_groups: [window2016]
#   plan:
#   - aggregate:
#     - get: ci
#     - get: wincni-master
#       trigger: true
#       passed: [wincni]
#     - get: cf-networking-release
#   - task: build-wincni
#     file: ci/build-binary/task.yml
#     input_mapping:
#       repo: wincni-master
#     output_mapping:
#       binary-output: wincni-binary
#     params:
#       IMPORT_PATH: "code.cloudfoundry.org/wincni"
#       PACKAGE: "./cmd/wincni"
#   - task: wincni-smoke-test
#     file: ci/wincni-smoke/task.yml

- name: local-gats
  serial: true
  serial_groups: [window2016]
  plan:
  - aggregate:
    - get: ci
    - get: every-2hrs
      trigger: true
    - get: gats-fork
    - get: garden-runc-release
    - get: winc-master
      passed: [winc]
      trigger: true
    - get: winc-release-develop
    - get: windows2016fs
  - aggregate:
    - task: build-winc
      file: ci/build-binary/task.yml
      input_mapping:
        repo: winc-master
      output_mapping:
        binary-output: winc-binary
      params:
        IMPORT_PATH: "code.cloudfoundry.org/winc"
        PACKAGE: "./cmd/winc"
    - task: build-winc-network
      file: ci/build-binary/task.yml
      input_mapping:
        repo: winc-master
      output_mapping:
        binary-output: winc-network-binary
      params:
        IMPORT_PATH: "code.cloudfoundry.org/winc"
        PACKAGE: "./cmd/winc-network"
    - task: build-winc-image
      file: ci/build-binary/task.yml
      input_mapping:
        repo: winc-master
      output_mapping:
        binary-output: winc-image-binary
      params:
        IMPORT_PATH: "code.cloudfoundry.org/winc"
        PACKAGE: "./cmd/winc-image"
    - task: build-nstar
      file: ci/build-binary/task.yml
      input_mapping:
        repo: winc-release-develop
      output_mapping:
        binary-output: nstar-binary
      params:
        PACKAGE: "./src/nstar"
  - task: copy-forks
    file: ci/copy-forks/task.yml
    input_mapping:
      garden-integration-tests: gats-fork
  - task: run-gats
    file: ci/run-local-gats/task.yml
    input_mapping:
      garden-runc-release: garden-runc-release-forks

- name: bump-winc-release
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
    - get: winc-master
      passed:
      - local-gats
      trigger: true
  - task: bump-submodule
    file: ci/bump-submodule/task.yml
    params:
      SUBMODULE: "src/code.cloudfoundry.org/winc"
    input_mapping:
      source-repo: winc-release-develop
      module-repo: winc-master
  - put: winc-release-develop
    params:
      repository: bumped-repo
      rebase: true

- name: test-nstar
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
    - get: winc-release-develop-trigger
      trigger: true
  - task: run-ginkgo-exe
    file: ci/run-ginkgo-exe/task.yml
    input_mapping:
      repo: winc-release-develop
    params:
      TEST_PATH: "src/nstar"

- name: pesto-wats
  serial: true
  plan:
  - put: pesto-lock-pool
    params:
      acquire: true
  - aggregate:
    - get: ci
    - get: winc-release-develop
      passed: [test-nstar]
      trigger: true
    - get: wats
      trigger: true
    - get: cf-deployment
      trigger: true
    - get: gcp-windows-stemcell
    - get: garden-windows-private
    - get: windows2016fs-release
  - aggregate:
    - task: get-cf-vars
      file: ci/get-gcs-file/task.yml
      output_mapping: { output: cf-vars }
      params:
        BUCKET: cff-greenhouse-pesto
        FILE_NAME: cf/vars.yml
        SERVICE_ACCOUNT_KEY: {{PESTO_SERVICE_ACCOUNT_JSON}}
    - task: get-linux-stemcell
      file: ci/get-gcp-linux-stemcell/task.yml
      output_mapping: { stemcell: gcp-linux-stemcell }
    - task: create-winc-release
      file: ci/bosh-cr/task.yml
      input_mapping:
        release: winc-release-develop
      output_mapping:
        release-tarball: winc-tarball
    - task: upload-windows2016fs-release
      file: ci/upload-windows2016fs-release/task.yml
      params:
        BOSH_CA_CERT: {{PESTO_BOSH_CA_CERT}}
        BOSH_CLIENT: {{PESTO_BOSH_CLIENT}}
        BOSH_CLIENT_SECRET: {{PESTO_BOSH_CLIENT_SECRET}}
        BOSH_ENVIRONMENT: {{PESTO_BOSH_ENVIRONMENT}}
  - put: pesto-cf-deployment
    params:
      manifest: cf-deployment/cf-deployment.yml
      stemcells:
      - gcp-linux-stemcell/*.tgz
      - gcp-windows-stemcell/*.tgz
      releases:
      - winc-tarball/*.tgz
      ops_files:
      - cf-deployment/operations/scale-to-one-az.yml
      - cf-deployment/operations/experimental/windows2016-cell.yml
      - garden-windows-private/operations-common/windows2016-prs.yml
      - garden-windows-private/operations-common/latest-winc.yml
      - garden-windows-private/operations-common/scale-down-windows2016.yml
      vars_files:
      - cf-vars/vars.yml
      cleanup: true
    get_params:
      skip_export: true
  - task: run-wats
    file: ci/run-wats/task.yml
    input_mapping:
    params:
      ADMIN_PASSWORD: {{PESTO_ADMIN_PASSWORD}}
      ADMIN_USER: admin
      API: api.pesto.cf-app.com
      APPS_DOMAIN: pesto.cf-app.com
      NUM_WIN_CELLS: 1
      SOCKET_ADDRESS_FOR_SECURITY_GROUP_TEST: 10.0.0.6:25555
      CONSUL_MUTUAL_TLS: false
      TEST_TASK: true
      SKIP_SSH: true
      STACK: windows2016
    on_success:
      task: delete-deployment
      file: ci/bosh-deld/task.yml
      params:
        BOSH_CA_CERT: {{PESTO_BOSH_CA_CERT}}
        BOSH_CLIENT: {{PESTO_BOSH_CLIENT}}
        BOSH_CLIENT_SECRET: {{PESTO_BOSH_CLIENT_SECRET}}
        BOSH_DEPLOYMENT: cf
        BOSH_ENVIRONMENT: {{PESTO_BOSH_ENVIRONMENT}}
  ensure:
    put: pesto-lock-pool
    params:
      release: pesto-lock-pool

- name: shipit
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: winc-release-develop
      passed: [pesto-wats]
    - get: version
      params: {bump: minor}
  - put: version
    params: {file: version/number}
  - task: finalize-release
    file: ci/finalize-release/task.yml
    input_mapping: { release: winc-release-develop }
    params:
      RELEASE_NAME: winc
      AWS_ACCESS_KEY_ID: {{BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: {{BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY}}
  - put: winc-release-develop
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: winc-release-master
    params:
      repository: finalized-release/release
  - task: generate-github-release
    input_mapping: { release: finalized-repo }
    file: ci/generate-github-release/task.yml
  - put: winc-release-github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - finalized-release/winc-*.tgz
