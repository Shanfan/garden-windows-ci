groups:
- name: all
  jobs:
  - build
  - promote
  - create-vsphere-from-vmx
  - test-vsphere-from-vmx
  - create-gcp
  - create-aws
  - test-aws
  - test-gcp
- name: main
  jobs:
  - build
  - promote
- name: vsphere
  jobs:
  - create-vsphere-from-vmx
  - test-vsphere-from-vmx
- name: gcp
  jobs:
  - create-gcp
  - test-gcp
- name: aws
  jobs:
  - create-aws
  - test-aws

resources:
# repos
- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/greenhouse-ci.git
- name: stemcell-builder
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry-incubator/bosh-windows-stemcell-builder.git
    private_key: ((CLOUDFOUNDRYINCUBATOR_BOSH_WINDOWS_STEMCELL_BUILDER_DEPLOY_KEY))
- name: windows-stemcell-dependencies
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/windows-stemcell-dependencies.git
    private_key: ((PIVOTAL-CF_WINDOWS-STEMCELL-DEPENDENCIES_PRIVATE_KEY))
- name: openssh-release
  type: github-release
  source:
    user: PowerShell
    repository: Win32-OpenSSH
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))
- name: stembuild
  type: github-release
  source:
    owner: pivotal-cf-experimental
    repository: stembuild
    pre_release: true
    access_token: ((GREENHOUSE_CI_ACCESS_TOKEN))

# versions
- name: main-version
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/stemcells-main-version-2016
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1600.0.0
- name: updated-vmx-version
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/updated-vmx-version-2016-insider
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: "1.0.0"
- name: vsphere-from-vmx-build-number
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/vsphere-stemcell-version-2016-insider
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1600.0.0
- name: gcp-build-number
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/gcp-2016-stemcell-version-edge
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1600.0.0
- name: aws-build-number
  type: semver
  source:
    bucket: bosh-windows-stemcells
    key: versions/aws-2016-stemcell-version-edge
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
    initial_version: 1600.0.0

# locks
- name: aws-lock
  type: pool
  source:
    branch: master
    pool: stemcells-aws
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: gcp-lock
  type: pool
  source:
    branch: master
    pool: stemcells-gcp
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: vsphere-director-lock
  type: pool
  source:
    branch: master
    pool: vsphere-director-lock
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks
- name: gcp-director-lock
  type: pool
  source:
    branch: master
    pool: gcp-director-lock
    private_key: ((BOSH-WINDOWS-LOCKS-CI_KEY))
    uri: git@github.com:pivotal-cf-experimental/Bosh-Windows-Locks

# s3 buckets
- name: major-stemcell
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: 2016-stemcell-(.*).json # Be careful not to match 2012's regex: stemcell-(.*).json
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-pre-release-candidate-vmx-2016-insider
  type: s3
  source:
    bucket: vsphere-stemcell-pre-release-candidate-vmx-2016-insider
    regexp: bosh-stemcell-(.*)-vsphere-esxi-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-release-candidate-vmx-2016-insider
  type: s3
  source:
    bucket: vsphere-stemcell-release-candidate-vmx-2016-insider
    regexp: bosh-stemcell-(.*)-vsphere-esxi-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: vsphere-stemcell-final-vmx-2016-insider
  type: s3
  source:
   bucket: bosh-windows-stemcells-private
   regexp: windows2016-insider/bosh-stemcell-(.*)-vsphere-esxi-windows2016-go_agent.tgz
   access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
   secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: base-amis-win2016
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: base-amis-windows2016-(.*).json
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: base-gcp-image-win2016
  type: s3
  source:
    bucket: bosh-windows-stemcells
    regexp: base-gcp-image-windows2016-(.*).json
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: packer-output-ami
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2016/untested/aws/inputs/packer-output-ami-(.*).txt
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: aws-2016-tested
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2016/tested/aws/light-bosh-stemcell-*-aws-xen-hvm-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: gcp-2016-untested
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2016/untested/gcp/light-bosh-stemcell-(.*)-google-kvm-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: gcp-2016-tested
  type: s3
  source:
    bucket: all-bosh-windows
    regexp: 2016/tested/gcp/light-bosh-stemcell-(.*)-google-kvm-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
- name: gcp-stemcell-final-2016
  type: s3
  source:
    bucket: bosh-windows-stemcells-production
    region_name: us-east-2
    regexp: gcp-2016/light-bosh-stemcell-(.*)-google-kvm-windows2016-go_agent.tgz
    access_key_id: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
    secret_access_key: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))

jobs:
- name: create-vsphere-from-vmx
  serial: true
  serial_groups: [vsphere]
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder
      passed: [build]
    - get: windows-stemcell-dependencies
    - get: version
      resource: vsphere-from-vmx-build-number
      passed: [build]
      trigger: true
    - get: vmx-version
      resource: updated-vmx-version
      passed: [build]
    - get: main-version
      passed: [build]
    - get: sshd
      resource: openssh-release
      version: { tag: ((OPEN_SSH_VERSION)) }
    - get: stembuild
  - put: version
    resource: vsphere-from-vmx-build-number
    params:
      pre: build
  - task: create-stemcell
    privileged: true
    # WARN: May need to make a new task
    file: ci/bosh-windows-stemcell-builder/create-vsphere-stemcell-from-vmx/task.yml
    tags: [vsphere-windows-worker]
    params:
      OS_VERSION: windows2016
      ADMINISTRATOR_PASSWORD: "Password123!"
      NEW_PASSWORD: "Password123!"
      ORGANIZATION: Pivotal
      OWNER: Pivotal
      AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
      AWS_REGION: us-east-1
      INPUT_BUCKET: bosh-windows-stemcell-vmx-2016-insider
      OUTPUT_BUCKET: vsphere-stemcell-pre-release-candidate-vmx-2016-insider
      VMX_CACHE_DIR: "C:\\vmx-data-2016"
      SKIP_WINDOWS_UPDATE: true

- name: test-vsphere-from-vmx
  serial: true
  serial_groups: [vsphere]
  plan:
  - put: vsphere-director-lock
    params:
      acquire: true
  - aggregate:
    - get: ci
    - get: bosh-windows-stemcell
      resource: vsphere-stemcell-pre-release-candidate-vmx-2016-insider
      tags: [vsphere-linux-worker]
      trigger: true
    - get: stemcell-builder
      passed: [create-vsphere-from-vmx]
    - get: version
      resource: vsphere-from-vmx-build-number
      passed: [create-vsphere-from-vmx]
    - get: main-version
      passed: [create-vsphere-from-vmx]
  - task: test-stemcell
    file: ci/bosh-windows-stemcell-builder/bwats/task.yml
    attempts: 5
    tags: [vsphere-linux-worker]
    params:
      VM_TYPE: large # WARN: This is Cloud Config specific!!!
      BOSH_CLIENT_SECRET: ((regina_client_secret))
      BOSH_CLIENT: ((regina_client))
      BOSH_TARGET: ((regina_environment))
      BOSH_CA_CERT: ((regina_ca_cert))
      STEMCELL_PATH: bosh-windows-stemcell/bosh-stemcell-*-vsphere-esxi-windows2016-go_agent.tgz
      STEMCELL_OS: windows2016
  - put: vsphere-stemcell-release-candidate-vmx-2016-insider
    params:
      file: bosh-windows-stemcell/bosh-stemcell-*-vsphere-esxi-windows2016-go_agent.tgz
  ensure:
    put: vsphere-director-lock
    params:
      release: vsphere-director-lock

- name: create-gcp
  serial: true
  plan:
  - put: gcp-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: stemcell-builder
      - get: base-gcp-image
        resource: base-gcp-image-win2016
        passed: [build]
      - get: version
        resource: gcp-build-number
        passed: [build]
        trigger: true
      - get: windows-stemcell-dependencies
      - get: main-version
        passed: [build]
      - get: sshd
        resource: openssh-release
        version: { tag: ((OPEN_SSH_VERSION)) }
    - put: version
      resource: gcp-build-number
      params:
        pre: build
    - task: create-stemcell
      file: ci/bosh-windows-stemcell-builder/create-gcp-stemcell/task.yml
      attempts: 10
      params:
        OS_VERSION: windows2016
        ACCOUNT_JSON: ((CFF-BOSH-WINDOWS-STEMCELLS_ACCOUNT_JSON))
      ensure:
        task: delete-orphan-vms
        file: ci/delete-vms/task.yml
        params:
          ACCOUNT_JSON: ((CFF-BOSH-WINDOWS-STEMCELLS_ACCOUNT_JSON))
    - task: publish-stemcell
      file: ci/bosh-windows-stemcell-builder/publish-gcp-stemcell/task.yml
      attempts: 1
      params:
        OS_VERSION: windows2016
        ACCOUNT_JSON: ((CFF-BOSH-WINDOWS-STEMCELLS_ACCOUNT_JSON))
    - put: gcp-2016-untested
      params:
        file: untested-stemcell/light-bosh-stemcell-*-google-kvm-windows2016-go_agent.tgz
    ensure:
      put: gcp-lock
      params:
        release: gcp-lock

- name: test-gcp
  serial: true
  plan:
  - put: gcp-director-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: bosh-windows-stemcell
        resource: gcp-2016-untested
        passed: [create-gcp]
      - get: ci
      - get: stemcell-builder
        passed: [create-gcp]
      - get: version
        resource: gcp-build-number
        passed: [create-gcp]
        trigger: true
      - get: windows-stemcell-dependencies
      - get: main-version
        passed: [create-gcp]
    - task: test-stemcell
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      params:
        IAAS: gcp
        ACCOUNT_JSON: ((CF-GREENHOUSE-GOOSE_ACCOUNT_JSON))
        BOSH_CLIENT_SECRET: ((goose_client_secret))
        BOSH_CLIENT: ((goose_client))
        BOSH_TARGET: ((goose_environment))
        BOSH_CA_CERT: ((goose_ca_cert))
        STEMCELL_PATH: bosh-windows-stemcell/light-bosh-stemcell-*-google-kvm-windows2016-go_agent.tgz
        STEMCELL_OS: windows2016
        NETWORK: private
        VM_EXTENSIONS: "50GB_ephemeral_disk" # WARN: Cloud Config specific
    - put: gcp-2016-tested
      params:
        file: bosh-windows-stemcell/light-bosh-stemcell-*-google-kvm-windows2016-go_agent.tgz
    ensure:
      put: gcp-director-lock
      params:
        release: gcp-director-lock

- name: create-aws
  serial: true
  plan:
  - put: aws-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: stemcell-builder
      - get: base-amis
        resource: base-amis-win2016
        passed: [build]
      - get: version
        resource: aws-build-number
        passed: [build]
        trigger: true
      - get: windows-stemcell-dependencies
      - get: main-version
        passed: [build]
      - get: sshd
        resource: openssh-release
        version: { tag: ((OPEN_SSH_VERSION)) }
    - task: cleanup-aws-regional-stemcells
      params:
        BUCKET_NAME: aws-regional-stemcells-2016
        REGION: us-east-1
        AWS_SECRET_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_SECRET_ACCESS_KEY))
        AWS_ACCESS_KEY: ((BOSH_WINDOWS_BOSH_CI_S3_ACCESS_KEY_ID))
      file: ci/bosh-windows-stemcell-builder/cleanup-aws-regional-stemcells/task.yml
    - put: version
      resource: aws-build-number
      params:
        pre: build
    - task: create-packer-ci-key
      privileged: true
      config:
        platform: linux
        image_resource: { type: docker-image, source: {repository: pivotalgreenhouse/ci } }
        outputs:
        - name: packer-ci-private-key
        run:
          path: bash
          args:
          - "-c"
          - 'echo "$PACKER_CI" > packer-ci-private-key/key && chmod 600 packer-ci-private-key/key'
        params:
          PACKER_CI: ((PACKER_CI_PRIVATE_KEY))
    - task: create-stemcell-us-east-1
      timeout: 1h30m
      attempts: 3
      file: ci/bosh-windows-stemcell-builder/create-aws-stemcell/task.yml
      params:
        OS_VERSION: windows2016
        REGION: us-east-2
        AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
        AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
        OUTPUT_BUCKET_NAME: aws-regional-stemcells-2016
    - put: packer-output-ami
      params:
        file: amis/packer-output-ami-*.txt
    ensure:
      aggregate:
        - put: aws-lock
          params:
            release: aws-lock
        - task: delete-orphan-vms
          file: ci/delete-vms/task.yml
          params:
            AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))

- name: test-aws
  serial: true
  plan:
  - put: aws-lock
    params:
      acquire: true
  - do:
    - aggregate:
      - get: ci
      - get: stemcell-builder
        passed: [create-aws]
      - get: base-amis
        resource: base-amis-win2016
        passed: [create-aws]
      - get: version
        resource: aws-build-number
        passed: [create-aws]
        trigger: true
      - get: windows-stemcell-dependencies
      - get: main-version
        passed: [create-aws]
      - get: sshd
        resource: openssh-release
        version: { tag: ((OPEN_SSH_VERSION)) }
      - get: amis
        resource: packer-output-ami
        passed: [create-aws]
    - task: copy-stemcells
      timeout: 1h30m
      attempts: 3
      file: ci/bosh-windows-stemcell-builder/copy-aws-stemcell/task.yml
      params:
        OS_VERSION: windows2016
        AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
        AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
        OUTPUT_BUCKET_NAME: aws-regional-stemcells-2016
        PACKER_REGION: us-east-2
        REGIONS: "us-east-1,us-west-1,us-west-2,ca-central-1,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ap-northeast-1,eu-central-1,eu-west-1,eu-west-2,sa-east-1"
    - task: aggregate-the-amis
      file: ci/bosh-windows-stemcell-builder/aggregate-the-amis/task.yml
      params:
        BUCKET_NAME: aws-regional-stemcells-2016
        REGION: us-east-1
        AWS_ACCESS_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_ACCESS_KEY_ID))
        AWS_SECRET_KEY: ((BOSH_WINDOWS_AWS_STEMCELLS_SECRET_ACCESS_KEY))
    - task: test-stemcell
      input_mapping: { bosh-windows-stemcell: bosh-windows-stemcell-final }
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      attempts: 5
      params:
        BOSH_CLIENT_SECRET: ((BOSH_CONCOURSE_BOSH_PASSWORD))
        BOSH_CLIENT: ((BOSH_CONCOURSE_BOSH_USER))
        BOSH_TARGET: ((BOSH_CONCOURSE_DIRECTOR_IP))
        BOSH_CA_CERT: ((BOSH_CONCOURSE_BOSH_TARGET_CERT))
        STEMCELL_PATH: bosh-windows-stemcell/light-bosh-stemcell-*-aws-xen-hvm-windows2016-go_agent.tgz
        STEMCELL_OS: windows2016
    - put: aws-2016-tested
      params:
        file: bosh-windows-stemcell/light-bosh-stemcell-*-aws-xen-hvm-windows2016-go_agent.tgz
    ensure:
      aggregate:
        - put: aws-lock
          params:
            release: aws-lock

- name: promote
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: vsphere-stemcell-release-candidate-vmx-2016-insider
      passed: [test-vsphere-from-vmx]
    - get: gcp-stemcell-release-candidate
      passed: [test-gcp]
      resource: gcp-2016-tested
    - get: stemcell-builder
      passed: [test-gcp,test-vsphere-from-vmx]
    - get: version
      resource: main-version
      passed: [test-gcp,test-vsphere-from-vmx]
  # Transfer GBs of data just so we can grab the version from the file name....
  - task: ensure-versions-match
    config:
      platform: linux
      image_resource: {type: docker-image, source: {repository: pivotalgreenhouse/ci}}
      inputs:
        - name: ci
        - name: vsphere-stemcell-release-candidate-vmx-2016-insider
        - name: gcp-stemcell-release-candidate
      run:
        path: ci/match-stemcell-versions/run
  - aggregate:
    - put: gcp-lock
      params:
        acquire: true
    - put: vsphere-director-lock
      params:
        acquire: true
  - aggregate:
    - task: test-vsphere-stemcell
      input_mapping: { bosh-windows-stemcell: vsphere-stemcell-release-candidate-vmx-2016-insider }
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      attempts: 5
      params:
        VM_TYPE: large # WARN: This is Cloud Config specific!!!
        BOSH_CLIENT_SECRET: ((regina_client_secret))
        BOSH_CLIENT: ((regina_client))
        BOSH_TARGET: ((regina_environment))
        BOSH_CA_CERT: ((regina_ca_cert))
        STEMCELL_PATH: bosh-windows-stemcell/bosh-stemcell-*-vsphere-esxi-windows2016-go_agent.tgz
        STEMCELL_OS: windows2016
      ensure:
        put: vsphere-director-lock
        params:
          release: vsphere-director-lock
    - task: test-gcp-stemcell
      input_mapping: { bosh-windows-stemcell: gcp-stemcell-release-candidate }
      file: ci/bosh-windows-stemcell-builder/bwats/task.yml
      params:
        IAAS: gcp
        ACCOUNT_JSON: ((CF-GREENHOUSE-GOOSE_ACCOUNT_JSON))
        BOSH_CLIENT_SECRET: ((goose_client_secret))
        BOSH_CLIENT: ((goose_client))
        BOSH_TARGET: ((goose_environment))
        BOSH_CA_CERT: ((goose_ca_cert))
        STEMCELL_PATH: bosh-windows-stemcell/light-bosh-stemcell-*-google-kvm-windows2016-go_agent.tgz
        STEMCELL_OS: windows2016
        NETWORK: private
        VM_EXTENSIONS: "50GB_ephemeral_disk" # WARN: Cloud Config specific
      ensure:
        put: gcp-lock
        params:
          release: gcp-lock
  - aggregate:
    - task: vsphere-set-stemcell-filename-version
      input_mapping: { bosh-windows-stemcell: vsphere-stemcell-release-candidate-vmx-2016-insider }
      output_mapping: { final-stemcell: vsphere-stemcell-final-vmx-2016-insider }
      file: ci/set-stemcell-version/task.yml
    - task: gcp-set-stemcell-filename-version
      input_mapping: { bosh-windows-stemcell: gcp-stemcell-release-candidate }
      output_mapping: { final-stemcell: gcp-stemcell-final-2016 }
      file: ci/set-stemcell-version/task.yml
  - task: create-major-stemcell
    file: ci/create-major-stemcell/task.yml
    input_mapping: { final-stemcell: gcp-stemcell-final-2016 } # Feed this thing a stemcell so it can parse the version
  - aggregate:
    - put: major-stemcell-s3
      resource: major-stemcell
      params:
        file: stemcell-info/2016-stemcell-*.json
    - put: vsphere-stemcell-final-s3
      resource: vsphere-stemcell-final-vmx-2016-insider
      params:
        file: vsphere-stemcell-final-vmx-2016-insider/bosh-stemcell-*-vsphere-esxi-windows2016-go_agent.tgz
    - put: gcp-stemcell-final-s3
      resource: gcp-stemcell-final-2016
      params:
        file: gcp-stemcell-final-2016/light-bosh-stemcell-*-google-kvm-windows2016-go_agent.tgz
  - put: main-version
    params:
      bump: minor

- name: build
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: stemcell-builder
    - get: windows-stemcell-dependencies
    - get: updated-vmx-version
    - get: version
      resource: main-version
      params:
        bump: patch
  - put: main-version
    params:
      file: version/number
  - aggregate:
    - put: vsphere-from-vmx-build-number
      params:
        file: version/number
    - put: aws-build-number
      params:
        file: version/number
    - put: gcp-build-number
      params:
        file: version/number
  - aggregate:
    - task: collect-win2016-amis
      file: ci/collect-base-amis/task.yml
      output_mapping: { base-amis: win2016-amis }
      params:
        AWS_ACCESS_KEY_ID: ((BOSH_WINDOWS_AWS_READ_VPC_EC2_ACCESS_KEY_ID))
        AWS_SECRET_ACCESS_KEY: ((BOSH_WINDOWS_AWS_READ_VPC_EC2_SECRET_ACCESS_KEY))
        BASE_AMI: windows2016
    - task: collect-win2016-gcp-image
      file: ci/collect-gcp-image/task.yml
      output_mapping: { base-gcp-image: win2016-gcp-image }
      params:
        ACCOUNT_JSON: ((CFF-BOSH-WINDOWS-STEMCELLS_ACCOUNT_JSON))
        BASE_OS: windows2016
  - aggregate:
    - put: base-amis-win2016
      params:
        file: win2016-amis/base-amis-windows2016-*.json
    - put: base-gcp-image-win2016
      params:
        file: win2016-gcp-image/base-gcp-image-windows2016-*.json

