#docker pull pivotalgreenhouse/ci
FROM ubuntu:16.04

RUN apt update
RUN apt install curl -y

# install ruby
#
RUN gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
RUN curl -sSL https://get.rvm.io | bash -s stable --ruby=2.3.3
RUN bash -l -c "ruby -v"
RUN bash -l -c "gem install bundler --no-ri --no-rdoc"

#install powershell :trollface:
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | tee /etc/apt/sources.list.d/microsoft.list
RUN apt install apt-transport-https -y
RUN apt-get update
RUN apt-get install -y powershell

# install azcopy
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
RUN mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
RUN sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > /etc/apt/sources.list.d/dotnetdev.list'
RUN apt-get update
RUN apt-get install dotnet-dev-1.1.4 -y
RUN apt install -y wget
RUN wget -O azcopy.tar.gz https://aka.ms/downloadazcopyprlinux
RUN tar -xf azcopy.tar.gz
RUN ./install.sh

# bosh Golang CLI
RUN version_number=$(curl 'https://github.com/cloudfoundry/bosh-cli/releases/latest' 2>&1 | egrep -o '([0-9]+\.[0-9]+\.[0-9]+)') && \
  curl "https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-${version_number}-linux-amd64" -o /usr/local/bin/bosh && \
  chmod 755 /usr/local/bin/bosh

# azure CLI
# see https://github.com/Azure/azure-cli-docker/blob/master/0.10.0/Dockerfile
# ENV AZURE_CLI_VERSION "0.10.0"
# ENV NODEJS_APT_ROOT "node_4.x"
# ENV NODEJS_VERSION "4.2.4"

# RUN curl https://deb.nodesource.com/${NODEJS_APT_ROOT}/pool/main/n/nodejs/nodejs_${NODEJS_VERSION}-1nodesource1~jessie1_amd64.deb > node.deb && \
#   dpkg -i node.deb && \
#   rm node.deb && \
#   npm install --global azure-cli@${AZURE_CLI_VERSION} && \
#   azure --completion >> ~/azure.completion.sh && \
#   echo 'source ~/azure.completion.sh' >> ~/.bashrc && \
#   azure

# RUN azure config mode arm

RUN wget -q https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O /usr/local/bin/jq && chmod +x /usr/local/bin/jq

RUN bash -l -c "gem install azure_mgmt_resources"

ENV GOLANG_VERSION 1.9
ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
ENV GOLANG_DOWNLOAD_SHA256 d70eadefce8e160638a9a6db97f7192d8463069ab33138893ad3bf31b0650a79

RUN curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz \
    && echo "$GOLANG_DOWNLOAD_SHA256  golang.tar.gz" | sha256sum -c - \
    && tar -C /usr/local -xzf golang.tar.gz \
    && rm golang.tar.gz

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 755 "$GOPATH/bin"

RUN echo "source /usr/local/rvm/scripts/rvm" >> ~/.bashrc
